import { MessageSectionCategory } from '../model/enums';
export declare class MessageAnalyst {
    result: MessageAnalysisResult;
    message: string;
    private regexSymbol;
    constructor(message: string);
}
export declare class MessageAnalysisResult {
    textSections: TextSection[];
    constructor();
    add(textSection: TextSection): void;
    get(index: number): TextSection;
}
export declare class TextSection {
    text: string;
    position: number;
    length: number;
    countEnglish: number;
    countChinese: number;
    countNumber: number;
    countSymbol: number;
    similarities: Similarity[];
    category: MessageSectionCategory;
    constructor(text: string);
    getSimilarity(category: MessageSectionCategory): Similarity;
    getHighestSimilarity(): Similarity;
    private count(regEx);
    private calcSimilarity(category);
    private getKeywordScore(keywords);
    private getRangeScore(count, countRange);
}
export interface TextPattern {
    category: MessageSectionCategory;
    countEnglish: MatchPattern;
    countNumber: MatchPattern;
    countChinese: MatchPattern;
    countSymbol: MatchPattern;
    keywords: string;
    keywordsWeight: number;
    required: boolean;
    priority: number;
}
export interface MatchPattern {
    minimalLength: number;
    maximalLength: number;
    lowerLength: number;
    higherLength: number;
    weight: number;
}
export interface Similarity {
    category: MessageSectionCategory;
    similarity: number;
}
